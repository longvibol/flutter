Create Post :

Run server : json server 

>>  npx json-server db.json --host=172.19.64.1

need to check out local Ip first 

-------------------------------------

2. Create function createPost 

Future createPost() async {
    final response = await http.post(Uri.parse("http://172.19.64.1:3000/posts"),
        body: jsonEncode({
          'title': _titleController.text,
          'body': _bodyController.text,
          'image_url': _imgController.text
        }));

    if (response.statusCode == 201) {
      print("Created Success");
      // _formKey.currentState!.reset();
    } else {
      print("Fail to Create Post!");
    }
  }


3. Create form in flutter :


Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Create Post"),
      ),
      body: Padding(
        padding: const EdgeInsets.all(20.0),
        child: Form(
          key: _formKey,
          child: Column(
            children: [
              TextFormField(
                // bind Controller
                controller: _titleController,
                decoration: InputDecoration(
                  hintText: "Title",
                  label: Text("Title"),
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return "Title can not be null";
                  }
                },
              ),
              SizedBox(
                height: 20,
              ),
              TextFormField(
                // bind Controller
                controller: _bodyController,
                decoration: InputDecoration(
                  hintText: "Body",
                  label: Text("Body"),
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return "Body can not be null";
                  }
                },
              ),
              SizedBox(
                height: 20,
              ),
              TextFormField(
                // bind Controller
                controller: _imgController,
                decoration: InputDecoration(
                  hintText: "Image Url",
                  label: Text("Image Url"),
                ),
              ),
              SizedBox(
                height: 20,
              ),
              Row(
                children: [
                  Expanded(
                    child: TextButton(
                      onPressed: () {
                        if (_formKey.currentState!.validate()) {
                          // perform task
                          createPost();
                        }
                      },
                      child: Text("SAVE"),
                    ),
                  )
                ],
              ),
            ],
          ),
        ),
      ),
    );

-------------------------------------


4. if we want to setup default value 

  final _titleController = TextEditingController(text: "Hello Flutter 2025");
  final _bodyController = TextEditingController(text: "Flutter is easy");
  final _imgController = TextEditingController(
      text:
          "https://static.vecteezy.com/system/resources/previews/039/655/206/large_2x/ai-generated-cute-girl-smiling-looking-at-camera-enjoying-nature-outdoors-generated-by-ai-free-photo.jpg");
  // create validation
  final _formKey = GlobalKey<FormState>();


---------------------------------------------------------------------------------
Whole code : 

1. main 

import 'package:flutter/material.dart';
import 'package:jsonapi/view/home_view.dart';

void main(){
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: HomeView(),
    );
  }
}


2. home_view
import 'dart:convert';
import 'dart:ffi';

import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'package:jsonapi/view/create_post.dart';

class HomeView extends StatefulWidget {
  const HomeView({super.key});

  @override
  State<HomeView> createState() => _HomeViewState();
}

class _HomeViewState extends State<HomeView> {
  Future<List> getPost() async {
    String url = "http://172.19.64.1:3000/posts";
    final response = await http.get(Uri.parse(url));
    final posts = jsonDecode(response.body);
    return posts;
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Posts"),
      ),
      body: FutureBuilder(
        future: getPost(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return Center(
              child: CircularProgressIndicator(),
            );
          }
          if (snapshot.hasError) {
            return Center(
              child: Text("${snapshot.error}"),
            );
          }
          return Padding(
            padding: const EdgeInsets.all(20.0),
            child: RefreshIndicator(
              onRefresh: () async {
                setState(() {});
              },
              child: ListView.builder(
                itemCount: snapshot.data!.length,
                itemBuilder: (context, index) {
                  final post = snapshot.data![index];
                  return Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        "${post['title']}",
                        style: TextStyle(fontWeight: FontWeight.bold),
                      ),
                      Text("${post['body']}"),
                      Image.network(
                        post['image_url'],
                        fit: BoxFit.cover,
                        width: double.infinity,
                      ),
                    ],
                  );
                },
              ),
            ),
          );
        },
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          Navigator.push(
            context,
            MaterialPageRoute(
              builder: (context) => CreatePostView(),
            ),
          );
        },
        child: Icon(Icons.add),
      ),
    );
  }
}


3. crate_post

import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

class CreatePostView extends StatelessWidget {
  CreatePostView({super.key});
  // create controller

  final _titleController = TextEditingController(text: "Hello Flutter 2025");
  final _bodyController = TextEditingController(text: "Flutter is easy");
  final _imgController = TextEditingController(
      text:
          "https://static.vecteezy.com/system/resources/previews/039/655/206/large_2x/ai-generated-cute-girl-smiling-looking-at-camera-enjoying-nature-outdoors-generated-by-ai-free-photo.jpg");
  // create validation
  final _formKey = GlobalKey<FormState>();

  Future createPost() async {
    final response = await http.post(Uri.parse("http://172.19.64.1:3000/posts"),
        body: jsonEncode({
          'title': _titleController.text,
          'body': _bodyController.text,
          'image_url': _imgController.text
        }));

    if (response.statusCode == 201) {
      print("Created Success");
      // _formKey.currentState!.reset();
    } else {
      print("Fail to Create Post!");
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Create Post"),
      ),
      body: Padding(
        padding: const EdgeInsets.all(20.0),
        child: Form(
          key: _formKey,
          child: Column(
            children: [
              TextFormField(
                // bind Controller
                controller: _titleController,
                decoration: InputDecoration(
                  hintText: "Title",
                  label: Text("Title"),
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return "Title can not be null";
                  }
                },
              ),
              SizedBox(
                height: 20,
              ),
              TextFormField(
                // bind Controller
                controller: _bodyController,
                decoration: InputDecoration(
                  hintText: "Body",
                  label: Text("Body"),
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return "Body can not be null";
                  }
                },
              ),
              SizedBox(
                height: 20,
              ),
              TextFormField(
                // bind Controller
                controller: _imgController,
                decoration: InputDecoration(
                  hintText: "Image Url",
                  label: Text("Image Url"),
                ),
              ),
              SizedBox(
                height: 20,
              ),
              Row(
                children: [
                  Expanded(
                    child: TextButton(
                      onPressed: () {
                        if (_formKey.currentState!.validate()) {
                          // perform task
                          createPost();
                        }
                      },
                      child: Text("SAVE"),
                    ),
                  )
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }
}




































